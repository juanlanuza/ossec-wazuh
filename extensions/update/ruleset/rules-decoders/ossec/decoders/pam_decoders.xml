<!-- @(#) $Id: decoder.xml,v 1.166 2010/06/15 12:52:01 dcid Exp $
  -  OSSEC log decoder.
  -  Author: Daniel B. Cid
  -  License: http://www.ossec.net/en/licensing.html
  -->


<!--
   - Allowed fields:
   - location - where the log came from (only on FTS)
   - srcuser  - extracts the source username
   - dstuser  - extracts the destination (target) username
   - user     - an alias to dstuser (only one of the two can be used)
   - srcip    - source ip
   - dstip    - dst ip
   - srcport  - source port
   - dstport  - destination port
   - protocol - protocol
   - id       - event id
   - url      - url of the event
   - action   - event action (deny, drop, accept, etc)
   - status   - event status (success, failure, etc)
   - extra_data     - Any extra data
  -->


<!-- Pam decoder.
  -  Will extract username and srcip whenever is possible.
  - Examples:
  - su(pam_unix)[23164]: authentication failure; logname= uid=1342 euid=0 tty= ruser=dcid rhost=  user=osaudit
  - su(pam_unix)[2298]: authentication failure; logname= uid=1342 euid=0 tty= ruser=dcid rhost=  user=root
  - vsftpd(pam_unix)[25073]: authentication failure; logname= uid=0 euid=0 tty= ruser= rhost=211.100.27.101
  - vsftpd(pam_unix)[25073]: check pass; user unknown
  - sshd(pam_unix)[16660]: authentication failure; logname= uid=0 euid=0 tty=NODEVssh ruser= rhost=202.110.184.100  user=root
  - su(pam_unix)[14592]: session opened for user news by (uid=0)
  - su(pam_unix)[14592]: session closed for user news
  - sshd(pam_unix)[13025]: authentication failure; logname= uid=0 euid=0 tty=NODEVssh ruser= rhost=210.70.129.207  user=nobody
  - sshd(pam_unix)[18987]: authentication failure; logname= uid=0 euid=0 tty=NODEVssh ruser= rhost=languedoc-2-81-56-82-49.fbx.proxad.net  user=root
  - sshd(pam_unix)[17365]: session opened for user test by (uid=508)
  - sshd(pam_unix)[1345]: authentication failure; logname= uid=0 euid=0 tty=NODEVssh ruser= rhost=222.237.79.237  user=root
  - sshd(pam_unix)[15794]: 2 more authentication failures; logname= uid=0
  euid=0 tty=ssh ruser= rhost=10.0.3.1  user=root
  - Nov 17 21:41:22 localhost su[8060]: (pam_unix) session opened for user root by (uid=0)
  - Nov 11 22:46:29 localhost vsftpd: pam_unix(vsftpd:auth): authentication failure; logname= uid=0 euid=0 tty= ruser= rhost=1.2.3.4
  - Sep 28 15:28:58 server login: pam_unix(login:session): session opened for user carl by LOGIN(uid=0)
  - Sep 28 15:35:18 server sshd[123]: pam_unix(sshd:session): session opened for user carl by (uid=0)
  -->
<decoder name="pam">
  <program_name>(pam_unix)$</program_name>
</decoder>

<decoder name="pam">
  <program_name></program_name>
  <prematch>^pam_unix|^\(pam_unix\)</prematch>
</decoder>

<decoder name="pam-user">
  <parent>pam</parent>
  <prematch>^session \w+ </prematch>
  <regex offset="after_prematch">^for user (\S+)</regex>
  <order>user</order>
</decoder>

<!--XXXX<decoder name="pam-user2">
  <parent>pam</parent>
  <prematch>^session \S+ </prematch>
  <regex>for user (\S+)</regex>
  <order>user</order>
</decoder>
-->

<decoder name="pam-host-user">
  <parent>pam</parent>
  <prematch>rhost=\S+\s+user=\S+</prematch>
  <regex>rhost=(\S+)\s+user=(\S+)</regex>
  <order>srcip, user</order>
</decoder>

<decoder name="pam-ruser">
  <parent>pam</parent>
  <prematch> ruser</prematch>
  <regex offset="after_prematch">^=(\S+) </regex>
  <order>user</order>
</decoder>

<decoder name="pam-ruser">
  <parent>pam</parent>
  <regex> rhost=(\S+)$</regex>
  <order>srcip</order>
</decoder>

<decoder name="pam-host">
  <parent>pam</parent>
  <prematch> rhost</prematch>
  <regex offset="after_prematch">^=(\S+)</regex>
  <order>srcip</order>
</decoder>
