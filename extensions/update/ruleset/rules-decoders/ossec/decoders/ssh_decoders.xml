<!-- @(#) $Id: decoder.xml,v 1.166 2010/06/15 12:52:01 dcid Exp $
  -  OSSEC log decoder.
  -  Author: Daniel B. Cid
  -  License: http://www.ossec.net/en/licensing.html
  -->


<!--
   - Allowed fields:
   - location - where the log came from (only on FTS)
   - srcuser  - extracts the source username
   - dstuser  - extracts the destination (target) username
   - user     - an alias to dstuser (only one of the two can be used)
   - srcip    - source ip
   - dstip    - dst ip
   - srcport  - source port
   - dstport  - destination port
   - protocol - protocol
   - id       - event id
   - url      - url of the event
   - action   - event action (deny, drop, accept, etc)
   - status   - event status (success, failure, etc)
   - extra_data     - Any extra data
  -->

  
<!-- SSH decoder.
  -  Will extract username and srcip from the logs.
  -  Only add to the FTS if the login was successful
  -  If the login failed, just extract the username/srcip for correlation
  -  Examples:
  -  sshd[8813]: Accepted password for root from 192.168.10.1 port 1066 ssh2
  -  sshd[2404]: Accepted password for root from 192.168.11.1 port 2011 ssh2
  -  sshd[21405]: Accepted password for root from 192.1.1.1 port 6023 ssh2
  -  sshd[21487]: Failed password for root from 192.168.1.1 port 1045 ssh2
  -  sshd[8813]: Failed none for root from 192.168.10.161 port 1066 ssh2
  -  sshd[12675]: Failed password for invalid user lala11 from x.x.x.x ..
  -  sshd[12914]: Failed password for invalid user lala6 from ...
  -  sshd[8267]: Failed password for illegal user test from 62.67.45.4 port 39141 ssh2
  -  sshd[11259]: Invalid user abc from 127.0.0.1
  -  "" Failed keyboard-interactive for root from 192.1.1.1 port 1066 ssh2
  -  sshd[23857]: [ID 702911 auth.notice] User xxx, coming from zzzz,
  -  authenticated.
  -  sshd[23578]: reverse mapping checking getaddrinfo for pib4.catv-bauer.at failed - POSSIBLE BREAKIN ATTEMPT!
  -  sshd[61834]: reverse mapping checking getaddrinfo for sv.tvcm.ch
  -  failed - POSSIBLE BREAKIN ATTEMPT!
  -  sshd[3251]: User root not allowed because listed in DenyUsers
  -  [Time 2006.12.28 15:53:55 UTC] [Facility auth] [Sender sshd] [PID 483] [Message error: PAM: Authentication failure for username from 192.168.0.2] [Level 3] [UID -2] [GID -2] [Host Hostname]
  -  [Time 2006.11.02 11:41:44 UTC] [Facility auth] [Sender sshd] [PID 800] [Message refused connect from 51.124.44.34] [Level 4] [UID -2] [GID -2] [Host test2-emac]
  -  Apr 23 07:03:53 machinename sshd[29961]: User root from 12.3.4.5
  not allowed because not listed in AllowUsers
  -  sshd[9815]: scanned from 127.0.0.1 with SSH-1.99-AKASSH_Version_Mapper1.  Don't panic.
  -  Sep  4 23:58:33 junction sshd[9351]: fatal: Write failed: Broken pipe
  -  Sep 18 14:58:47 ix sshd[11816]: error: Could not load host key: /etc/ssh/ssh_host_ecdsa_key
  -  Sep 23 10:32:25 server sshd[25209]: pam_ldap: error trying to bind as user "uid=user123,ou=People,dc=domain,dc=com" (Invalid credentials)
  -  Aug 10 08:38:40 junction sshd[20013]: error: connect_to 192.168.179 port 8080: failed
  -  Jun  9 00:00:01 ix sshd[9815]: scanned from 127.0.0.1 with SSH-1.99-AKASSH_Version_Mapper1.  Don't panic.
  -  Jan 26 11:57:26 ix sshd[14879]: error: connect to ix.example.com port 7777 failed: Connection refused
  -  Oct  8 10:07:27 y sshd[7644]: debug1: attempt 2 failures 2
  -  Oct  8 08:58:37 y sshd[6956]: fatal: PAM: pam_setcred(): Authentication service cannot retrieve user credentials
  -  Oct  8 08:48:33 y sshd[6856]: error: Bind to port 22 on 0.0.0.0 failed: Address already in use.
  -  Oct  8 11:18:26 172.16.51.132 sshd[7618]: error: PAM: Module is unknown for ddp from 172.16.51.1
  -  Jun 19 20:56:00 tiny sshd[11605]: fatal: Write failed: Host is down
  -  Jun 11 06:32:17 gorilla sshd[28293]: fatal: buffer_get_bignum2: buffer error
  -  Jun 11 06:32:17 gorilla sshd[28293]: error: buffer_get_bignum2_ret: negative numbers not supported
  -  Apr 14 19:28:21 gorilla sshd[31274]: Connection closed by 192.168.1.33
  -  Jun 22 12:01:13 junction sshd[11283]: Received disconnect from 212.14.228.46: 11: Bye Bye
  -  Nov  9 07:40:25 ginaz sshd[5973]: error: setsockopt SO_KEEPALIVE: Connection reset by peer
  -  Nov  2 12:08:27 192.168.17.7 sshd[9665]: fatal: Cannot bind any address.
  -  Nov  2 12:11:40 192.168.17.7 sshd[9814]: pam_loginuid(sshd:session): set_loginuid failed opening loginuid
  -  Nov  6 09:53:38 hagal sshd[697]: error: accept: Software caused connection abort
  -  Nov  9 11:36:55 ecaz sshd[26967]: pam_succeed_if(sshd:auth): error retrieving information about user _z9xxbBW
  -->

<decoder name="sshd">
  <program_name>^sshd</program_name>
</decoder>

<decoder name="sshd-success">
  <parent>sshd</parent>
  <prematch>^Accepted</prematch>
  <regex offset="after_prematch">^ \S+ for (\S+) from (\S+) port </regex>
  <order>user, srcip</order>
  <fts>name, user, location</fts>
</decoder>

<decoder name="ssh-denied">
  <parent>sshd</parent>
  <prematch>^User \S+ from </prematch>
  <regex offset="after_parent">^User (\S+) from (\S+) </regex>
  <order>user, srcip</order>
</decoder>

<decoder name="sshd-success-solaris">
  <parent>sshd</parent>
  <prematch>^User </prematch>
  <regex offset="after_prematch">^(\S+), coming from (\S+), </regex>
  <order>user, srcip</order>
  <fts>name, user, location</fts>
</decoder>

<decoder name="ssh-invfailed">
  <parent>sshd</parent>
  <prematch>^Failed \S+ for invalid user|^Failed \S+ for illegal user</prematch>
  <regex offset="after_prematch">(\S+) from (\S+)</regex>
  <order>srcuser,srcip</order>
</decoder>

<decoder name="ssh-failed">
  <parent>sshd</parent>
  <prematch>^Failed \S+ </prematch>
  <regex offset="after_prematch">^for (\S+) from (\S+) port \d+ \w+$</regex>
  <order>user, srcip</order>
</decoder>

<decoder name="ssh-error">
  <parent>sshd</parent>
  <prematch>^error: PAM: Authentication \w+ </prematch>
  <regex offset="after_prematch">^for (\S+) from (\S+)$</regex>
  <order>user, srcip</order>
</decoder>

<decoder name="ssh-reverse-mapping">
  <parent>sshd</parent>
  <prematch>^reverse mapping checking </prematch>
  <regex offset="after_prematch">^\w+ for \S+ [(\S+)] |^\w+ for (\S+) </regex>
  <order>srcip</order>
</decoder>

<decoder name="ssh-invalid-user">
  <parent>sshd</parent>
  <prematch>^Invalid user|^Illegal user</prematch>
  <regex offset="after_prematch">(\S+) from (\S+)$</regex>
  <order>srcuser,srcip</order>
</decoder>

<decoder name="ssh-scan">
  <parent>sshd</parent>
  <prematch>^scanned from</prematch>
  <regex offset="after_prematch"> (\S+) </regex>
  <order>srcip</order>
</decoder>

<decoder name="ssh-scan2">
  <parent>sshd</parent>
  <prematch>^Did not receive identification|^Bad protocol version</prematch>
  <regex offset="after_prematch"> from (\S+)$</regex>
  <order>srcip</order>
</decoder>

<decoder name="ssh-osx-refuse">
  <parent>sshd</parent>
  <prematch>^refused connect </prematch>
  <regex offset="after_prematch">^from (\S+)$</regex>
  <order>srcip</order>
</decoder>

<decoder name="ssh-closed">
  <parent>sshd</parent>
  <prematch>^Connection closed </prematch>
  <regex offset="after_prematch">^by (\S+)$</regex>
  <order>srcip</order>
</decoder>

<decoder name="ssh-disconnect">
  <parent>sshd</parent>
  <prematch>^Received disconnect </prematch>
  <regex offset="after_prematch">^from (\S+):</regex>
  <order>srcip</order>
</decoder>

<!--XXX
<decoder name="ssh-pam">
  <parent>sshd</parent>
  <prematch>PAM: Module</prematch>
  <regex>for (\S+) from (\S+)$</regex>
  <order>user, srcip</order>
</decoder>

<decoder name="ssh-connect-to">
  <parent>sshd</parent>
  <prematch>connect_to</prematch>
  <regex>connect_to: (\S+) port (\d+):</regex>
  <order>dstip,dstport</order>
</decoder>
-->

<decoder name="sshd-ldap">
  <parent>sshd</parent>
  <prematch>^pam_ldap: </prematch>
  <regex>user "uid=(\S+),ou=\w+,dc=\w+,dc=\w+"</regex>
  <order>user</order>
</decoder>
